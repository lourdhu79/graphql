type Amenity {
  id: ID!
  category: AmenityCategory!
  name: String!
}

enum AmenityCategory {
  ACCOMMODATION_DETAILS
  SPACE_SURVIVAL
  OUTDOORS
}

input CreateListingInput {
  """The listing's title"""
  title: String!

  """The listing's description"""
  description: String!

  """The thumbnail image for the listing"""
  photoThumbnail: String!

  """The number of beds available"""
  numOfBeds: Int!

  """The cost per night"""
  costPerNight: Float!

  """The location type of the listing"""
  locationType: LocationType!

  """The Listing's amenities """
  amenities: [ID!]!
}

type CreateListingResponse implements MutationResponse {
  """Similar to HTTP status code, represents the status of the mutation"""
  code: Int!

  """Indicates whether the mutation was successful"""
  success: Boolean!

  """Human-readable message for the UI"""
  message: String!

  """The newly created listing"""
  listing: Listing
}

"""Coordinates in the galaxy"""
type GalacticCoordinates {
  latitude: Float!
  longitude: Float!
  nickname: String
}

type Guest implements User {
  id: ID!

  """The user's first and last name"""
  name: String!

  """The user's profile photo URL"""
  profilePicture: String!
}

type Host implements User {
  id: ID!

  """The user's first and last name"""
  name: String!

  """The user's profile photo URL"""
  profilePicture: String!

  """The host's profile bio description, will be shown in the listing"""
  profileDescription: String!

  """Where the host is primarily located"""
  coordinates: GalacticCoordinates
}

type Listing {
  id: ID!

  """The listing's title"""
  title: String!

  """The listing's description"""
  description: String!

  """The thumbnail image for the listing"""
  photoThumbnail: String!

  """Photo edited for homepage"""
  photoInHexagonShape: String @deprecated(reason: "Unused field.")

  """The number of beds available"""
  numOfBeds: Int!

  """The cost per night"""
  costPerNight: Float!

  """The location type of the listing"""
  locationType: LocationType!

  """Owner of the listing"""
  host: Host!

  """The amenities available for this listing"""
  amenities: [Amenity]!

  """Where this listing is located in the galaxy"""
  coordinates: GalacticCoordinates
}

enum LocationType {
  SPACESHIP
  HOUSE
  CAMPSITE
  APARTMENT
  ROOM
}

type Mutation {
  """Updates the logged-in user's profile information"""
  updateProfile(updateProfileInput: UpdateProfileInput): UpdateProfileResponse!

  """Creates a new listing for the currently authenticated host"""
  createListing(listing: CreateListingInput!): CreateListingResponse!

  """Updates an existing listing"""
  updateListing(listingId: ID!, listing: UpdateListingInput!): UpdateListingResponse!
}

interface MutationResponse {
  """Similar to HTTP status code, represents the status of the mutation"""
  code: Int!

  """Indicates whether the mutation was successful"""
  success: Boolean!

  """Human-readable message for the UI"""
  message: String!
}

"""Listing Graph"""
type Query {
  user(id: ID!): User

  """Currently logged-in user"""
  me: User!

  """A curated array of listings to feature on the homepage"""
  featuredListings: [Listing!]!

  """Search results for listings that fit the criteria provided"""
  searchListings(criteria: SearchListingsInput): [Listing!]!

  """Return the listings that belong to the currently logged-in host"""
  hostListings: [Listing!]!

  """Returns the details about this listing"""
  listing(id: ID!): Listing

  """Returns all possible amenities for a listing"""
  listingAmenities: [Amenity!]!
}

input SearchListingsInput {
  checkInDate: String!
  checkOutDate: String!
  numOfBeds: Int
  page: Int
  limit: Int
  sortBy: SortByCriteria
}

enum SortByCriteria {
  COST_ASC
  COST_DESC
  RATING_DESC
}

"""
Updates the properties included. If none are given, don't update anything
"""
input UpdateListingInput {
  """The listing's title"""
  title: String

  """The listing's description"""
  description: String

  """The thumbnail image for the listing"""
  photoThumbnail: String

  """The number of beds available"""
  numOfBeds: Int

  """The cost per night"""
  costPerNight: Float

  """The location type of the listing"""
  locationType: LocationType

  """The Listing's amenities """
  amenities: [ID]
}

type UpdateListingResponse implements MutationResponse {
  """Similar to HTTP status code, represents the status of the mutation"""
  code: Int!

  """Indicates whether the mutation was successful"""
  success: Boolean!

  """Human-readable message for the UI"""
  message: String!

  """The newly created listing"""
  listing: Listing
}

input UpdateProfileInput {
  """The user's first and last name"""
  name: String

  """The user's profile photo URL"""
  profilePicture: String

  """The host's profile bio description, will be shown in the listing"""
  profileDescription: String
}

type UpdateProfileResponse implements MutationResponse {
  """Similar to HTTP status code, represents the status of the mutation"""
  code: Int!

  """Indicates whether the mutation was successful"""
  success: Boolean!

  """Human-readable message for the UI"""
  message: String!

  """Updated user"""
  user: User
}

interface User {
  id: ID!

  """The user's first and last name"""
  name: String!

  """The user's profile photo URL"""
  profilePicture: String!
}